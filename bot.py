import telebot
from telebot import types
import openpyxl
from openpyxl.styles import PatternFill
import requests
import webbrowser
from bs4 import BeautifulSoup as BS
import config

tovars = requests.get('http://procen.ru/ceny/')   # –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ
html = BS(tovars.content, 'html.parser')
tegs_a = html.findAll('a')[6:]
names_tovars = []
ssilki = []
prices = dict()
for i in range(len(tegs_a)):
    ssilka = tegs_a[i]['href'][5:]       # –≤—ã—Ç–∞—Å–∫–∏–≤–∞—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
    ssilki.append(ssilka[1:])            # —É–±–∏—Ä–∞—é —Å–ª–µ—à
    prices[tegs_a[i].text] = ssilka
    names_tovars.append(tegs_a[i].text)        # –Ω–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤



bot = telebot.TeleBot(config.TOKEN)

food = {}  # —Å–ª–æ–≤–∞—Ä—å –≥–¥–µ –±—É–¥—É—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ: {–∫–æ–ª-–≤–æ, –µ–¥.–∏–∑–º–µ—Ä–µ–Ω–∏—è, —Ü–µ–Ω–∞ —Å —Å–∞–π—Ç–∞}
p = []
a = []


# —Å–ø–∏—Å–æ–∫ —Ü–µ–Ω
m = ['249.0p/—à—Ç', '729.0p/–∫–≥', '105.0p/–∫–≥', '130.0p/–∫–≥', '109.0p/–∫–≥', '184.0p/–∫–≥', '65.0p/–∫–≥', '90.0p/–∫–≥', '62.0p/—à—Ç',
     '299.0p/—à—Ç', '630.0p/—à—Ç', '105.0p/–∫–≥', '2599.0p/—à—Ç', '41.5p/—à—Ç', '169.0p/—à—Ç', '30.0p/—à—Ç', '100.0p/—à—Ç', '89.0p/—à—Ç',
     '183.0p/—à—Ç', '55.0p/–∫–≥', '84.0p/–∫–≥', '78.0p/—à—Ç', '96.0p/—à—Ç', '150.0p/–∫–≥', '80.0p/—à—Ç', '20.0p/—à—Ç', '165.0p/–∫–≥',
     '25.0p/—à—Ç', '122.6p/—à—Ç', '177.6p/–∫–≥', '27.0p/—à—Ç', '110.0p/—à—Ç', '160.0p/–∫–≥', '26.0p/—à—Ç', '135.0p/–∫–≥', '170.0p/—à—Ç',
     '89.9p/—à—Ç', '100.0p/—à—Ç', '140.0p/—à—Ç', '30.0p/—à—Ç', '125.0p/–∫–≥', '309.0p/—à—Ç', '1729.0p/–∫–≥', '792.0p/–∫–≥', '120.0p/—à—Ç',
     '29.7p/—à—Ç', '250.0p/—à—Ç', '48.0p/—à—Ç', '45.0p/—à—Ç', '419.0p/–∫–≥', '60.0p/—à—Ç', '719.0p/—à—Ç', '129.0p/—à—Ç', '1069.9p/–∫–≥',
     '94.0p/—à—Ç', '36.0p/—à—Ç', '54.0p/—à—Ç', '70.0p/–∫–≥', '899.0p/—à—Ç', '130.0p/—à—Ç', '241.0p/—à—Ç', '62.5p/–∫–≥', '22.0p/–∫–≥',
     '48.0p/—à—Ç', '63.0p/—à—Ç', '240.0p/—à—Ç', '88.0p/—à—Ç', '82.0p/—à—Ç', '75.0p/—à—Ç', '50.0p/—à—Ç', '50.0p/—à—Ç', '299.0p/—à—Ç',
     '140.0p/—à—Ç', '140.0p/–∫–≥', '89.0p/—à—Ç', '470.0p/—à—Ç', '5.5p/—à—Ç', '73.0p/—à—Ç', '479.0p/—à—Ç', '150.0p/–∫–≥', '729.0p/–∫–≥',
     '89.0p/—à—Ç', '58.0p/—à—Ç', '329.0p/—à—Ç', '299.0p/—à—Ç', '105.0p/–∫–≥', '420.0p/—à—Ç', '54.0p/—à—Ç', '39.9p/—à—Ç', '65.0p/—à—Ç',
     '1399.0p/—à—Ç', '200.0p/—à—Ç', '46.0p/—à—Ç', '21.0p/—à—Ç', '20.0p/–∫–≥', '729.3p/–∫–≥', '56.0p/—à—Ç', '69.2p/—à—Ç', '89.0p/—à—Ç',
     '120.0p/—à—Ç', '119.0p/—à—Ç', '30.0p/–∫–≥', '111.0p/–∫–≥', '132.6p/—à—Ç', '103.0p/—à—Ç', '21.0p/—à—Ç', '21.0p/—à—Ç', '40.0p/—à—Ç',
     '24.5p/—à—Ç', '97.0p/—à—Ç', '45.0p/—à—Ç', '339.0p/—à—Ç', '50.0p/—à—Ç', '82.3p/—à—Ç', '268.0p/—à—Ç', '89.0p/—à—Ç', '37.0p/—à—Ç',
     '208.0p/—à—Ç', '52.5p/—à—Ç', '820.0p/–∫–≥', '56.0p/—à—Ç', '500.0p/—à—Ç', '88.0p/—à—Ç', '34.8p/—à—Ç', '78.0p/—à—Ç', '20.0p/—à—Ç',
     '129.0p/—à—Ç', '30.0p/–∫–≥', '32.0p/—à—Ç', '123.0p/–∫–≥', '62.0p/—à—Ç', '89.2p/–∫–≥', '114.9p/—à—Ç', '200.0p/—à—Ç', '129.0p/—à—Ç',
     '50.0p/—à—Ç', '28.0p/—à—Ç', '56.0p/—à—Ç', '170.0p/—à—Ç', '46.5p/—à—Ç', '129.0p/—à—Ç', '459.0p/—à—Ç', '50.0p/—à—Ç', '234.0p/—à—Ç',
     '15.9p/–∫–≥', '50.0p/—à—Ç', '86.0p/—à—Ç', '199.0p/—à—Ç', '250.0p/–∫–≥', '80.0p/—à—Ç', '68.0p/—à—Ç', '70.0p/—à—Ç', '50.0p/—à—Ç',
     '95.0p/–∫–≥', '560.0p/–∫–≥', '59.5p/—à—Ç']

# –∑–∞—Å–æ–≤—ã–≤–∞—é –≤—Å–µ –≤ —Å–ª–æ–≤–∞—Ä—å food
for i in range(len(names_tovars)):
    food[names_tovars[i]] = [0, '—à—Ç', m[i]]


@bot.message_handler(commands=['start'])  # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
def welcome(message):
    sti = open('sticker.webp', 'rb')   # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
    bot.send_sticker(message.chat.id, sti)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)   # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    item1 = types.KeyboardButton('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤')
    item2 = types.KeyboardButton('–°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã')
    item3 = types.KeyboardButton('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∫—É–ø–∏—Ç—å')
    item4 = types.KeyboardButton('‚úç EDIT')
    markup.add(item1, item2, item3, item4)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - {1.first_name}, —á–µ–º –≤–∞–º –ø–æ–º–æ—á—å?'.format(message.from_user, bot.get_me()), reply_markup=markup)

# —Ä–µ–∞–∫—Ü–∏–∏ –±–æ—Ç–∞ –Ω–∞ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
def movie(message):
    if message.text == 'üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤':
        print(food)
        if len(food) > 0:
            file_excel = openpyxl.load_workbook(filename='food1.xlsx', data_only=True)  # –æ—Ç–∫—Ä—ã–≤–∞—é —Ñ–∞–π–ª –µ–∫—Å–µ–ª—å food1.xlsx
            sheet = file_excel['Sheet1']
            sheet['A1'], sheet['B1'], sheet['C1'], sheet['D1'], sheet['E1'] = '–ù–æ–º–µ—Ä', '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞', '–ö–æ–ª-–≤–æ', '–ï–¥. –ò–∑–º–µ—Ä–µ–Ω–∏—è', '–¶–µ–Ω–∞'
            yellowFill = PatternFill(start_color='F9DA5C', end_color='F9DA5C', fill_type='solid')  # –∂–µ–ª—Ç—ã–π —Ü–≤–µ—Ç —è—á–µ–π–∫–∏
            for i in range(len(names_tovars)):
                sheet['A' + str(i + 2)] = i + 1
                if int(food[names_tovars[i]][0]) == 0:
                    work_sheet = sheet['A' + str(i + 2)]
                    work_sheet.fill = yellowFill    # –æ—Ç–º–µ—á–∞—é —è—á–µ–π–∫–∏ –∂–µ–ª—Ç—ã–º —Ü–≤–µ—Ç–æ–º –µ—Å–ª–∏ –∫–æ–ª-–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞ —Ä–∞–≤–Ω–æ 0
                sheet['B' + str(i + 2)] = names_tovars[i]
                sheet['C' + str(i + 2)] = int(food[names_tovars[i]][0])
                if len(food[names_tovars[i]]) == 2:
                    sheet['D' + str(i + 2)] = food[names_tovars[i]][1]
                elif len(food[names_tovars[i]]) == 3:
                    price = food[names_tovars[i]][2].split('/')
                    sheet['D' + str(i + 2)] = price[1]
                    sheet['E' + str(i + 2)] = food[names_tovars[i]][2]
            file_excel.save('food2.xlsx')     # —Å–æ—Ö—Ä–∞–Ω—è—é —Ñ–∞–π–ª
            file = open('food2.xlsx', 'rb')
            bot.send_document(message.chat.id, file)  # –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª
        else:
            bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—É—Å—Ç')

    elif message.text == '–°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã':    # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É —Ü–µ–Ω –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–¥—É–∫—Ç–∞
        bot.send_message(message.chat.id, '–í–≤–≤–µ–¥–∏—Ç–µ "#{–Ω–æ–º–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞}"')

    elif message.text == '‚úç EDIT':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –∫–Ω–æ–ø–∫–∏
        item1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å/–£–º–µ–Ω—å—à–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç')
        item2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç')
        item3 = types.KeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—ã')
        item4 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚¨Ö')
        markup.add(item1, item2, item3, item4)
        bot.send_message(message.chat.id, '–í—ã –∑–∞—à–ª–∏ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä ‚úè', reply_markup=markup)


    # —É—Å–ª–æ–≤–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã'
    elif message.text[0] == '#' and message.text[1:].isdigit() and int(message.text[1:]) <= len(names_tovars):
        index_ssilki = int(message.text[1]) - 1
        bot.send_message(message.chat.id, 'http://procen.ru/ceny/' + ssilki[index_ssilki])
        webbrowser.open('http://procen.ru/ceny/' + str(ssilki[index_ssilki]))    # –æ—Ç–∫—Ä—ã–≤–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É (–Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏)

    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å/–£–º–µ–Ω—å—à–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç':  # –∏–∑–º–µ–Ω–∏—Ç—å, –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ª-–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞, —Å–∞–º –ø—Ä–æ–¥—É–∫—Ç
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –≤ —Å–ø–∏—Å–æ–∫\n'
                                        '–≤–≤–µ–¥–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n'
                                        '"–ê–±—Ä–∏–∫–æ—Å—ã + 1 —à—Ç"\n')
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–º–µ–Ω—å—à–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç\n'
                                        '–≤–≤–µ–¥–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n'
                                        '"–ê–±—Ä–∏–∫–æ—Å—ã + -1 —à—Ç"\n')

    elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç':     # —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑ —Å–ø–∏—Å–∫–∞
        bot.send_message(message.chat.id, '–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞')


    elif message.text == '–ù–∞–∑–∞–¥ ‚¨Ö':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤')
        item2 = types.KeyboardButton('–°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã')
        item3 = types.KeyboardButton('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∫—É–ø–∏—Ç—å')
        item4 = types.KeyboardButton('‚úç EDIT')
        markup.add(item1, item2, item3, item4)
        bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥ ‚¨Ö', reply_markup=markup)


    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
    elif message.text.isdigit() and int(message.text) <= len(names_tovars):
        tovar_name = names_tovars[int(message.text) - 1]
        del names_tovars[int(message.text) - 1]
        del food[tovar_name]
        bot.send_message(message.chat.id, '–ü—Ä–æ–¥—É–∫—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω!')

    # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –Ω—É–ª–µ–≤—ã–º –∫–æ–ª-–≤–æ–º
    elif message.text == '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∫—É–ø–∏—Ç—å':
        file_excel = openpyxl.load_workbook(filename='food1.xlsx', data_only=True) # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –µ–∫—Å–µ–ª—å
        sheet = file_excel['Sheet1']
        sheet['A1'], sheet['B1'], sheet['C1'], sheet['D1'], sheet['E1'] = '–ù–æ–º–µ—Ä', '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞', '–ö–æ–ª-–≤–æ', '–ï–¥. –ò–∑–º–µ—Ä–µ–Ω–∏—è', '–¶–µ–Ω–∞'
        count = 0
        for tovar_name in food:
            if food[tovar_name][0] == 0:
                count += 1
                sheet['A' + str(count + 1)] = count
                sheet['B' + str(count + 1)] = tovar_name
                sheet['C' + str(count + 1)] = food[tovar_name][0]
                if len(food[tovar_name]) == 3:
                    sheet['D' + str(count + 1)] = food[tovar_name][2].split('/')[1]
                    sheet['E' + str(count + 1)] = food[tovar_name][2]
                else:
                    sheet['D' + str(count + 1)] = food[tovar_name][1]
        file_excel.save('food_need.xlsx')   # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        file = open('food_need.xlsx', 'rb')
        bot.send_document(message.chat.id, file)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª

    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω —Å —Å–∞–π—Ç–∞
    elif message.text == '–û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—ã':
        bot.send_message(message.chat.id, '–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω–æ 2 –º–∏–Ω....')
        for i in range(len(names_tovars)):
            if names_tovars[i] in prices:
                prod = requests.get('http://procen.ru/ceny/' + prices[names_tovars[i]] + '/')
                prod1 = BS(prod.content, 'html.parser')
                for cena in prod1.select('.price_right')[0:1]:  # –ø–∞—Ä—Å–∏–º —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
                    for ed_izmeren in prod1.select('.mob_off')[1:2]:  # –µ–¥. –∏–∑–º–µ—Ä–µ–Ω–∏—è –∫–æ–ª-–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
                        if len(food[names_tovars[i]]) == 2:
                            food[names_tovars[i]].append(ed_izmeren.text + 'p/' + ed_izmeren.text)
                        else:
                            food[names_tovars[i]][2] = cena.text + 'p/' + ed_izmeren.text
                        if len(food) > 0:
                            file_excel = openpyxl.load_workbook(filename='food1.xlsx', data_only=True)
                            sheet = file_excel['Sheet1']
                            sheet['A1'], sheet['B1'], sheet['C1'], sheet['D1'], sheet['E1'] = '–ù–æ–º–µ—Ä', '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞', '–ö–æ–ª-–≤–æ', '–ï–¥. –ò–∑–º–µ—Ä–µ–Ω–∏—è', '–¶–µ–Ω–∞'
                            for i in range(len(food)):
                                sheet['A' + str(i + 2)] = i + 1
                                yellowFill = PatternFill(start_color='F9DA5C', end_color='F9DA5C', fill_type='solid')  # –∂–µ–ª—Ç—ã–π —Ü–≤–µ—Ç
                                if int(food[names_tovars[i]][0]) == 0:
                                    work_sheet = sheet['A' + str(i + 2)]
                                    work_sheet.fill = yellowFill   # –≤—ã–¥–µ–ª—è–µ–º —è—á–µ–π–∫—É, –µ—Å–ª–∏ –∫–æ–ª-–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞ —Ä–∞–≤–Ω–æ 0
                                sheet['B' + str(i + 2)] = names_tovars[i]
                                sheet['C' + str(i + 2)] = int(food[names_tovars[i]][0])
                                if len(food[names_tovars[i]]) == 2:
                                    sheet['D' + str(i + 2)] = food[names_tovars[i]][1]
                                elif len(food[names_tovars[i]]) == 3:
                                    price_ed_izmeren = food[names_tovars[i]][2].split('/')
                                    sheet['D' + str(i + 2)] = price_ed_izmeren[1]
                                    sheet['E' + str(i + 2)] = food[names_tovars[i]][2]
                        else:
                            bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—É—Å—Ç')
        file_excel.save('food2.xlsx')   # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–∫—Å–µ–ª—å
        f = open('food2.xlsx', 'rb')
        bot.send_document(message.chat.id, f)    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–∫—Å–µ–ª—å


    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –î–æ–±–∞–≤–ª–µ–Ω–∏—è/–ò–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª-–≤–∞ –∏ –ø—Ä–æ–¥—É–∫—Ç–∞
    elif len(message.text.split()) == 4:
        m = message.text.split()
        if m[0] not in names_tovars:
            bot.send_message(message.chat.id, '–ü—Ä–æ–¥—É–∫—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!')
            names_tovars.append(m[0])
            food[m[0]] = [int(m[2]), m[3]]
            if food[m[0]][0] < 0:
                food[m[0]][0] = 0
        else:
            if m[2][0] == '-':

                bot.send_message(message.chat.id, '–ü—Ä–æ–¥—É–∫—Ç –±—ã–ª —É–º–µ–Ω—å—à–µ–Ω!')
            else:
                bot.send_message(message.chat.id, '–ü—Ä–æ–¥—É–∫—Ç –±—ã–ª —É–≤–µ–ª–∏—á–µ–Ω!')
            food[m[0]][0] += int(m[2])
            food[m[0]][1] = m[3]
            if food[m[0]][0] < 0:
                food[m[0][0]] = 0
    else:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')

# –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –±–ª—é–¥ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤.
# –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –±–ª—é–¥–∞, –≤ –¥–∏–∞–ª–æ–≥–µ —Å –±–æ—Ç–æ–º, —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
# –ª–∏ –∫–æ–ª-–≤–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤. –ü–æ—Å–ª–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–Ω–µ—Å–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫
# –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–æ–∫ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.


bot.polling(none_stop=True, interval=0)

